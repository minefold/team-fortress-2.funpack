#!/usr/bin/env ruby

# usage: run | transform
# transforms server output to minefold friendly output

require 'time'
require 'json'

STDOUT.sync = true
STDIN.sync = true

HUMAN_FRIENDLY = ARGV.include?('-h')

# Events:
# started
# stopping
# player_connected      { playername: '..' }
# player_disconnected
# chatted
# opped
# deopped
# whitelist_added
# whitelist_removed
# banned
# pardoned
# info
# warning
# critical

def readable type, options={}
  "#{Time.now.utc.strftime('%Y-%b-%d %H:%M:%S')} [#{type}] " +
    options.map{|k,v| "#{k}=#{v.include?(' ') ? ("\"" + v + "\"") : v}"}.join(' ')
end

def json type, options={}
  args = {ts: Time.now.utc.iso8601, event: type }.merge(options)
  JSON.dump(args)
end

def event type, options = {}
  line = if HUMAN_FRIENDLY
    readable type, options
  else
    json type, options
  end
  puts line
end

$stdin.each do |line|
  case
  when line.include?('via HTTP; update is queued')
    event 'started'

  when line =~ /\"([^\<]+)(.*)entered the game/
    event 'player_connected', playername: $1

  when line =~ /\"([^\<]+)(.*) disconnected \(reason \"(.+)\"/
    event 'player_disconnected', playername: $1, reason: $2

  when line =~ /\"([^\<]+).* say (.+)/
    event 'chatted', playername: $1, msg: $2.gsub(/^"|"?$/, '')

  else
    event 'info', msg: line.strip
  end
end
